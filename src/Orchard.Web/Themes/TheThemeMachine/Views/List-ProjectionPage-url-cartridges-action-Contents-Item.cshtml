@{
    
	  //dynamic Display,
	  //      TextWriter Output,
	IEnumerable<dynamic> Items = Model.Items;
	//string Tag = Model.Tag;
	  //      string Id,
	  //      IEnumerable<string> Classes,
	  //      IDictionary<string, string> Attributes,
	  //      IEnumerable<string> ItemClasses,
	  //      IDictionary<string, string> ItemAttributes) {

	  //      if (Items == null)
	  //          return;

            var itemDisplayOutputs = Items.
				Select(item => Display(item)).
				Where(output => !string.IsNullOrWhiteSpace(output.ToHtmlString())).
				ToList();
            var count = itemDisplayOutputs.Count();
            

			//var listTagName = string.IsNullOrEmpty(Tag) ? "ul" : Tag;
			//const string itemTagName = "li";

			//var listTag = GetTagBuilder(listTagName, Id, Classes, Attributes);
			//Output.Write(listTag.ToString(TagRenderMode.StartTag));

			////var index = 0;
			//foreach (var itemDisplayOutput in itemDisplayOutputs) 
			//{
			//    //var itemTag = GetTagBuilder(itemTagName, null, ItemClasses, ItemAttributes);
			//    //if (index == 0)
			//    //    itemTag.AddCssClass("first");
			//    //if (index == count - 1)
			//    //    itemTag.AddCssClass("last");
			//    //Output.Write(itemTag.ToString(TagRenderMode.StartTag));
			//    Output.Write(itemDisplayOutput);
			//    //Output.Write(itemTag.ToString(TagRenderMode.EndTag));
			//    //++index;
			//}

            //Output.Write(listTag.ToString(TagRenderMode.EndTag));
}



@*<h1 >Всего элементов @count</h1>

<div style="display: inline">
            @foreach (var itemDisplayOutput in itemDisplayOutputs) 
			{
				
				<div>@itemDisplayOutput</div>
				
            }
</div>*@